const LS_KEY='psq_data_v2';const BASE_POINTS=5,ACCURACY_BONUS=3,REPORT_COOLDOWN_SEC=45,POINTS_DAILY_CAP=40;
const seedVenues=[{id:'v1',name:'Pickler Universe (Dallas)',address:'Dallas, TX',courts:12,createdAt:Date.now()},{id:'v2',name:'Brookhaven Park',address:'Farmers Branch, TX',courts:8,createdAt:Date.now()},{id:'v3',name:'The Grove Pickleball',address:'Dallas, TX',courts:6,createdAt:Date.now()}];
const state=(()=>{try{return JSON.parse(localStorage.getItem(LS_KEY))||{venues:seedVenues,reports:[],user:{id:Date.now()+''},rewards:{points:0,lastGain:0,streakDays:0,verifiedDays:[],totalReports30d:0,accuracyPct:null,pending:[]}}}catch(e){return{venues:seedVenues,reports:[],user:{id:Date.now()+''},rewards:{points:0,lastGain:0,streakDays:0,verifiedDays:[],totalReports30d:0,accuracyPct:null,pending:[]}}})();
function save(){localStorage.setItem(LS_KEY,JSON.stringify(state))}function $(s){return document.querySelector(s)}function el(t,p,...k){const e=document.createElement(t);Object.assign(e,p);k.forEach(x=>e.appendChild(typeof x=='string'?document.createTextNode(x):x));return e}
function fromNow(ts){const s=Math.floor((Date.now()-ts)/1e3);if(s<60)return s+'s ago';const m=Math.floor(s/60);if(m<60)return m+'m ago';return Math.floor(m/60)+'h ago'}function ymd(ts){return new Date(ts).toISOString().slice(0,10)}function today(){return ymd(Date.now())}
const venueSelect=$('#venueSelect'),addVenueBtn=$('#addVenueBtn'),newVenueForm=$('#newVenueForm'),venueName=$('#venueName'),venueAddress=$('#venueAddress'),venueCourts=$('#venueCourts'),saveVenueBtn=$('#saveVenueBtn');
const decBtn=$('#decBtn'),incBtn=$('#incBtn'),stackInput=$('#stackInput'),stackType=$('#stackType'),noteInput=$('#noteInput'),submitReportBtn=$('#submitReportBtn'),cooldown=$('#cooldown'),cooldownTime=$('#cooldownTime');
const consensusEl=$('#consensus'),confidenceEl=$('#confidence'),lastUpdateEl=$('#lastUpdate'),recentReportsEl=$('#recentReports'),avgGameMinEl=$('#avgGameMin'),ppcEl=$('#ppc'),waitTextEl=$('#waitText');
const rewardStrip=$('#rewardStrip'),streakText=$('#streakText'),accuracyText=$('#accuracyText'),lastGainText=$('#lastGainText'),pointsTotal=$('#pointsTotal'),toast=$('#toast');
const rewardsModal=$('#rewardsModal'),openRewardsBtn=$('#openRewardsBtn'),closeRewardsBtn=$('#closeRewardsBtn'),pointsBig=$('#pointsBig'),levelBadge=$('#levelBadge'),nextLevelName=$('#nextLevelName'),progressFill=$('#progressFill'),streakBig=$('#streakBig'),accuracyBig=$('#accuracyBig'),reportsMonth=$('#reportsMonth'),badgesGrid=$('#badgesGrid');
function init(){venueSelect.innerHTML='';state.venues.forEach(v=>venueSelect.appendChild(el('option',{value:v.id,textContent:`${v.name}${v.address?' · '+v.address:''}`})));}init();render();
addVenueBtn.onclick=()=>newVenueForm.classList.toggle('hidden');saveVenueBtn.onclick=()=>{const n=venueName.value.trim(),c=parseInt(venueCourts.value,10)||4;if(!n)return alert('Venue name required');const v={id:Math.random().toString(36).slice(2),name:n,address:venueAddress.value.trim(),courts:c,createdAt:Date.now()};state.venues.push(v);save();init();venueSelect.value=v.id;newVenueForm.classList.add('hidden');venueName.value=venueAddress.value=venueCourts.value='';render();};
decBtn.onclick=()=>stackInput.value=Math.max(0,(+stackInput.value||0)-1);incBtn.onclick=()=>stackInput.value=(+stackInput.value||0)+1;
function secondsRemaining(){const since=(Date.now()-(state.user.lastSubmittedAt||0))/1e3;return Math.max(0,Math.ceil(REPORT_COOLDOWN_SEC-since))}
setInterval(()=>{const r=secondsRemaining();if(r>0){cooldown.classList.remove('hidden');cooldownTime.textContent=r;submitReportBtn.disabled=true}else{cooldown.classList.add('hidden');submitReportBtn.disabled=false}},500);
submitReportBtn.onclick=()=>{const vid=venueSelect.value,c=Math.max(0,parseInt(stackInput.value,10)||0),t=stackType.value,n=noteInput.value.trim();if(!vid)return alert('Pick a venue');const rpt={id:Math.random().toString(36).slice(2),venueId:vid,userId:state.user.id,count:c,type:t,note:n,createdAt:Date.now()};state.reports.push(rpt);state.user.lastSubmittedAt=Date.now();const g=grantBasePoints(vid);if(g>0)toastMsg('+'+g+' PaddlePoints!');state.rewards.lastGain=g;state.rewards.pending.push({reportId:rpt.id,venueId:vid,count:c,createdAt:rpt.createdAt,evaluated:false});save();noteInput.value='';render();};
venueSelect.onchange=avgGameMinEl.oninput=ppcEl.oninput=render;
function grantBasePoints(vid){const todayStr=today();const todayReports=state.reports.filter(r=>r.venueId===vid&&ymd(r.createdAt)===todayStr&&r.userId===state.user.id);const already=todayReports.length>0?Math.min(POINTS_DAILY_CAP,(todayReports.length-1)*BASE_POINTS):0;if(already>=POINTS_DAILY_CAP)return 0;const g=Math.min(BASE_POINTS,POINTS_DAILY_CAP-already);state.rewards.points+=g;return g}
function evaluatePending(){let gave=0;const now=Date.now();state.rewards.pending.forEach(p=>{if(p.evaluated)return;if(now-p.createdAt>3600000)p.evaluated=true;const cons=consensus(p.venueId);if(cons.value==null)return;if(Math.abs((cons.value||0)-p.count)<=1){state.rewards.points+=ACCURACY_BONUS;state.rewards.lastGain=ACCURACY_BONUS;gave+=ACCURACY_BONUS;p.evaluated=true;const d=ymd(p.createdAt);if(!state.rewards.verifiedDays.includes(d))state.rewards.verifiedDays.push(d);}});state.rewards.pending=state.rewards.pending.filter(p=>!p.evaluated&&(now-p.createdAt)<3600000);if(gave>0)toastMsg('+'+gave+' Accuracy Bonus!')}
function consensus(venueId){const cutoff=Date.now()-3600000;const reports=state.reports.filter(r=>r.venueId===venueId&&r.createdAt>=cutoff&&r.type==='paddles');if(!reports.length)return{value:null,confidence:0,lastTs:null,reports:[]};const lambda=Math.log(2)/900000;const weighted=reports.map(r=>({...r,w:Math.exp(-lambda*(Date.now()-r.createdAt))})).sort((a,b)=>a.count-b.count);const total=weighted.reduce((s,r)=>s+r.w,0);let cum=0,med=weighted[0].count;for(const r of weighted){cum+=r.w;if(cum>=total/2){med=r.count;break}}const uniq=new Set(weighted.map(r=>r.userId)).size;const counts=weighted.map(r=>r.count).sort((a,b)=>a-b);const q1=counts[Math.floor((counts.length-1)*0.25)],q3=counts[Math.floor((counts.length-1)*0.75)];const iqr=Math.max(0,q3-q1);const spread=Math.max(0,1-Math.min(1,iqr/Math.max(1,med||1)));const volume=Math.min(1,uniq/6);const recency=Math.min(1,weighted.reduce((s,r)=>s+r.w,0)/3);const conf=Math.round((0.5*spread+0.3*volume+0.2*recency)*100);const lastTs=Math.max(...reports.map(r=>r.createdAt));return{value:med,confidence:conf,lastTs,reports}};
function waitText(cons,venue){if(cons.value==null)return'Not enough recent reports yet.';const stacks=cons.value,courts=Math.max(1,venue.courts||4),avg=Math.max(5,parseInt(avgGameMinEl.value,10)||12),rounds=Math.ceil(stacks/courts),est=rounds*avg,note=stacks===0?'No wait — jump in!':`${stacks} stack${stacks===1?'':'s'} across ${courts} court${courts===1?'':'s'}.`;return `${note} Roughly ${est} min for a stack to play (assumes ~${avg} min games).`}
function computeStreak(){if(!state.rewards.verifiedDays.length)return 0;const days=new Set(state.rewards.verifiedDays);let s=0,d=new Date();for(;;){const k=d.toISOString().slice(0,10);if(days.has(k)){s++;d.setDate(d.getDate()-1)}else break}return s}
function accuracy(){const cutoff=Date.now()-2592000000;const mine=state.reports.filter(r=>r.userId===state.user.id&&r.createdAt>=cutoff&&r.type==='paddles');if(!mine.length)return null;let ok=0;mine.forEach(r=>{const cons=consensus(r.venueId);if(cons.value==null)return;if(Math.abs(cons.value-r.count)<=1)ok++});return Math.round(ok/mine.length*100)}
function reports30(){const cutoff=Date.now()-2592000000;return state.reports.filter(r=>r.userId===state.user.id&&r.createdAt>=cutoff).length}
function level(pts){return pts>=3000?'Platinum':pts>=2000?'Gold':pts>=1000?'Silver':'Bronze'}function nextInfo(pts){if(pts<1000)return{name:'Silver',pct:pts/10};if(pts<2000)return{name:'Gold',pct:(pts-1000)/10};if(pts<3000)return{name:'Platinum',pct:(pts-2000)/10};return{name:'Max',pct:100}}
function badges(){const s=state.rewards.streakDays,a=state.rewards.accuracyPct||0,r=state.rewards.totalReports30d||0;return[{l:'🔥 7-Day Streak',e:s>=7},{l:'🔥 30-Day Streak',e:s>=30},{l:'🎯 95% Accuracy',e:a>=95&&r>=20},{l:'🏆 50 Reports',e:r>=50},{l:'🎉 First Report',e:state.reports.some(r=>r.userId===state.user.id)}]}
function render(){const vid=venueSelect.value||(state.venues[0]&&state.venues[0].id);const venue=state.venues.find(v=>v.id===vid);if(!venue)return;evaluatePending();const cons=consensus(venue.id);consensusEl.textContent=cons.value==null?'–':cons.value;confidenceEl.textContent=cons.confidence?cons.confidence+'%':'–';lastUpdateEl.textContent=cons.lastTs?fromNow(cons.lastTs):'–';waitTextEl.textContent=waitText(cons,venue);recentReportsEl.innerHTML='';cons.reports.sort((a,b)=>b.createdAt-a.createdAt).slice(0,12).forEach(r=>{const row=el('div',{className:'report'});row.appendChild(el('div',{},el('b',{},String(r.count)),' stacks ',r.note?el('span',{},'· '+r.note):''));row.appendChild(el('div',{},el('small',{},fromNow(r.createdAt))));recentReportsEl.appendChild(row)});state.rewards.streakDays=computeStreak();state.rewards.accuracyPct=accuracy();state.rewards.totalReports30d=reports30();pointsTotal.textContent=state.rewards.points;streakText.textContent='🔥 '+state.rewards.streakDays+'-Day Streak';accuracyText.textContent='🎯 '+(state.rewards.accuracyPct==null?'—':state.rewards.accuracyPct+'%')+' Accuracy';lastGainText.textContent='+'+(state.rewards.lastGain||0)+' pts';rewardStrip.classList.remove('hidden');save();}
function updateUI(){const pts=state.rewards.points;pointsBig&&(pointsBig.textContent=pts);if(levelBadge){const lvl=level(pts);levelBadge.textContent=lvl;levelBadge.style.background={'Bronze':'#CD7F32','Silver':'#C0C0C0','Gold':'#FFD700','Platinum':'#E5E4E2'}[lvl]||'#CD7F32'};streakBig&&(streakBig.textContent=state.rewards.streakDays||0);accuracyBig&&(accuracyBig.textContent=state.rewards.accuracyPct==null?'—':state.rewards.accuracyPct+'%');reportsMonth&&(reportsMonth.textContent=state.rewards.totalReports30d||0);const n=nextInfo(pts);nextLevelName&&(nextLevelName.textContent=n.name);progressFill&&(progressFill.style.width=Math.max(0,Math.min(100,n.pct)).toFixed(0)+'%');badgesGrid&&(badgesGrid.innerHTML='');badges().forEach(b=>badgesGrid&&badgesGrid.appendChild(el('div',{className:'badge '+(b.e?'':'locked')},b.l)));}
function toastMsg(t){toast.textContent=t;toast.classList.add('show');setTimeout(()=>toast.classList.remove('show'),1600)}
openRewardsBtn.onclick=()=>{updateUI();rewardsModal.classList.remove('hidden')};closeRewardsBtn.onclick=()=>rewardsModal.classList.add('hidden');setInterval(render,5000);render();